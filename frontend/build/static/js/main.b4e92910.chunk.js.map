{"version":3,"sources":["img/ZobioLogo.svg","img/FridgeIn2.svg","img/FridgeOut2.svg","img/ZobioLogo_Flat.svg","AuthApi.js","ApiFunctions.js","Login.js","RightDrawer.js","Home/HomeScreen.js","Scan/Pages/SelectProject.js","Scan/Pages/ScanItems.js","Scan/Pages/ItemsSubmitted.js","Scan/Pages/PrintLabels.js","Scan/Components/MySnackbar.js","Scan/Components/MyDialog.js","Scan/Functions/ScanFunctions.js","Scan/Add.js","Scan/Delete.js","Scan/CheckIn.js","Scan/CheckOut.js","Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AuthApi","React","createContext","host","username","password","a","console","log","publicKey","forge","pki","publicKeyFromPem","process","encryptedPassword","encrypt","md","sha256","create","mgf1","base64","util","encode64","axios","url","method","headers","request","fetchProjects","token","Cookies","get","Token","fetchSendData","type","data","fetchPosition","barcode","selectedProject","project","value","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","props","classes","Auth","useContext","useState","setUsername","setPassword","remember","setRemember","incorrect","setIncorrect","isLoading","setIsLoading","onChange","event","target","name","Fragment","LinearProgress","component","maxWidth","CssBaseline","className","src","ZobioLogo","TextField","variant","required","fullWidth","error","id","label","autoComplete","autoFocus","FormControlLabel","control","Checkbox","color","checked","Button","onClick","preventDefault","history","fetchCheckLDAP","then","response","status","statusText","setAuth","set","expires","push","catch","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","justifyContent","buttonSignOut","marginBottom","RightDrawer","open","fullname","Drawer","anchor","Divider","Box","flexGrow","List","ListItem","ListItemText","ListItemIcon","Avatar","aria-label","charAt","toUpperCase","primary","remove","href","buttons","avatarAdd","success","avatarCheck","warning","avatarDelete","HomeScreen","handleChangePage","Card","CardActionArea","Link","underline","CardHeader","fontSize","title","subheader","CheckOutIcon","CheckInIcon","marginRight","marginLeft","select","arrange","SelectProject","projects","onProjectChange","Typography","gutterBottom","CircularProgress","Select","native","key","map","item","index","inputLabel","circular","chip","button","themeTable","createMuiTheme","overrides","MuiTableRow","root","ScanItems","onDataChange","onBarcodeSubmitted","setBarcode","onSubmit","ThemeProvider","components","Container","Paper","elevation","options","paging","search","showTitle","columns","field","editable","render","rowData","localization","header","actions","onRowDelete","oldData","Promise","resolve","reject","setTimeout","dataCopy","Array","from","indexOf","splice","Chip","disabled","onKeyPress","size","line","block","TableBarcodes","exportButton","exportFileName","rowStyle","height","JSON","stringify","ItemsSubmitted","allItemsSubmitted","failedSubmittedItems","PrintLabels","MySnackbar","handleSnackbar","Snackbar","autoHideDuration","onClose","Alert","severity","AlertTitle","body","MyDialog","handleDialog","handleYesDialog","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","isBarcodeUnique","isUnique","forEach","formatDate","dateTime","month","getMonth","day","getDate","year","getFullYear","hours","getHours","min","getMinutes","length","posIntegerToString","pos","Math","floor","toString","appBar","position","layout","breakpoints","up","stepper","Add","activeStep","setActiveStep","openSnackbar","setOpenSnackbar","dataSnackbar","setDataSnackbar","openDialog","setOpenDialog","setAllItemsSubmitted","setFailedSubmittedItems","lastLocation","setLastLocation","firstLocation","setFirstLocation","setData","setProjects","setSelectecProject","useEffect","array","concat","fetchLastPosition","slice","lastBox","lastPos","handleProjectChange","handleDataChanged","newData","box","string","row","substring","col","parseInt","posStringToInteger","poslabel","handleBarcodeSubmitted","nextBox","nextPos","nextLocation","timestamp","Date","now","handleNext","handleBack","handlePrint","align","Stepper","Step","StepLabel","step","getStepContent","contents","getButtonContent","Delete","CheckIn","CheckOut","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","backButton","hide","content","contentShift","Dashboard","openDrawer","setOpenDrawer","openPopup","setOpenPopup","lastPage","setLastPage","activePage","setActivePage","window","addEventListener","includes","page","AppBar","clsx","Toolbar","IconButton","edge","ZobioLogoFlat","noWrap","disableRipple","getPageContent","light","dark","ProtectedRoute","auth","Component","rest","to","pathname","ProtectedLogin","Routes","path","exact","App","useCookie","Provider","Boolean","location","hostname","match","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b4e92910.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ZobioLogo.41100ac4.svg\";","module.exports = __webpack_public_path__ + \"static/media/FridgeIn2.22ff45d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/FridgeOut2.fc1742cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/ZobioLogo_Flat.c938947b.svg\";","import React from 'react';\nconst AuthApi = React.createContext();\nexport default AuthApi;","import axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport forge from \"node-forge\";\n\nconst host = \"http://192.168.60.12:8080\"; // \"http://localhost:5000\" // \"http://192.168.60.12:8080\"\n\n// Asynchronous function to login to LDAP of Zobio\nexport async function fetchCheckLDAP(username, password) {\n  console.log(\"Fetching checking ldap account...\");\n\n  const publicKey = forge.pki.publicKeyFromPem(\n    process.env.REACT_APP_PUBLIC_KEY\n  );\n  const encryptedPassword = publicKey.encrypt(password, \"RSA-OAEP\", {\n    md: forge.md.sha256.create(),\n    mgf1: forge.mgf1.create(),\n  });\n  const base64 = forge.util.encode64(encryptedPassword);\n\n  const request = await axios({\n    url: host + \"/login\",\n    method: \"post\",\n    headers: {\n      username: username,\n      password: base64,\n    },\n  });\n\n  return request;\n}\n\n// Asynchronous function to fetch all the projects in CDD Vault\nexport async function fetchProjects() {\n  console.log(\"Fetching all projects...\");\n  const token = Cookies.get(\"token\");\n\n  const request = await axios({\n    url: host + \"/projects\",\n    method: \"get\",\n    headers: { Token: token },\n  });\n\n  return request;\n}\n\n// Asynchronous function to send data to CDD Vault\nexport async function fetchSendData(type, data) {\n  console.log(\"Fetching send data to CDD...\");\n  const token = Cookies.get(\"token\");\n\n  const request = await axios({\n    url: host + \"/submitdata\",\n    method: \"post\",\n    headers: { Token: token },\n    data: { type, data },\n  });\n\n  return request;\n}\n\n// Asynchronous function to fetch the last occupied postion of the selected project\nexport async function fetchPosition(type, barcode, selectedProject) {\n  console.log(\"Fetching position...\");\n  const token = Cookies.get(\"token\");\n\n  const request = await axios({\n    url: host + \"/getlocation\",\n    method: \"post\",\n    headers: { Token: token },\n    data: { type: type, project: selectedProject, barcode: barcode },\n  });\n\n  return request;\n}\n\n// Asynchronous function to fetch the last occupied postion of the selected project\nexport async function fetchLastPosition(selectedProject) {\n  if (selectedProject.value === 0) return;\n  console.log(\"Fetching last position...\");\n  const token = Cookies.get(\"token\");\n\n  const request = await axios({\n    url: host + \"/getlastlocation\",\n    method: \"post\",\n    headers: { Token: token },\n    data: selectedProject,\n  });\n\n  return request;\n}\n","import React, { useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport forge from \"node-forge\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nimport Container from \"@material-ui/core/Container\";\n\nimport AuthApi from \"./AuthApi\";\nimport ZobioLogo from \"./img/ZobioLogo.svg\";\nimport { fetchCheckLDAP } from \"./ApiFunctions\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Login(props) {\n  const classes = useStyles();\n  const Auth = React.useContext(AuthApi);\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [remember, setRemember] = useState(false);\n  const [incorrect, setIncorrect] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onChange = (event) => {\n    const { value, name } = event.target;\n    if (name === \"username\") {\n      setUsername(value);\n    }\n    if (name === \"password\") {\n      setPassword(value);\n    }\n    if (name === \"remember\") {\n      setRemember(!remember);\n    }\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    const { history } = props;\n\n    setIsLoading(true);\n    fetchCheckLDAP(username, password)\n      .then((response) => {\n        console.log(response);\n        if (response.status == 200 && response.statusText == \"OK\") {\n          console.log(response.data[\"message\"]);\n          Auth.setAuth(true);\n          Cookies.set(\n            \"username\",\n            response.data[\"output\"][\"userData\"][\"username\"],\n            { expires: 1 }\n          );\n          Cookies.set(\"fullname\", response.data[\"output\"][\"userData\"][\"cn\"], {\n            expires: 1,\n          });\n          Cookies.set(\"authentication\", true, { expires: 1 });\n          Cookies.set(\"token\", response.data[\"output\"][\"token\"], {\n            expires: 1,\n          });\n          Cookies.set(\"remember\", remember, { expires: 1 });\n          history.push(\"/dashboard\");\n        } else {\n          console.error(\"ERROR: Request succeeded, but status not 200\");\n          console.error(response);\n          setIsLoading(false);\n        }\n      })\n      .catch((error) => {\n        setIncorrect(true);\n        if (error.response) {\n          console.error(\n            `ERROR fetchCheckLDAP(), status: ${error.response.status}, statusText: ${error.response.statusText}, message: '${error.response.data[\"message\"]}'`\n          );\n        } else {\n          console.error(error);\n        }\n        setIsLoading(false);\n      });\n  };\n\n  return (\n    <React.Fragment>\n      {isLoading && <LinearProgress />}\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <img src={ZobioLogo} width={200} />\n          <form className={classes.form}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              error={incorrect}\n              value={username}\n              id=\"username\"\n              name=\"username\"\n              label=\"Username\"\n              autoComplete=\"username\"\n              autoFocus\n              onChange={onChange}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              error={incorrect}\n              value={password}\n              id=\"password\"\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              onChange={onChange}\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  id=\"remember\"\n                  name=\"remember\"\n                  value=\"remember\"\n                  color=\"primary\"\n                  checked={remember}\n                  onChange={onChange}\n                />\n              }\n              label=\"Remember me\"\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={onSubmit}\n            >\n              Sign In\n            </Button>\n          </form>\n        </div>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport Cookies from \"js-cookie\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Box from \"@material-ui/core/Box\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-start\",\n  },\n  buttonSignOut: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginBottom: 10,\n  },\n}));\n\nfunction RightDrawer({ open }) {\n  const classes = useStyles();\n  const fullname = Cookies.get(\"fullname\");\n\n  const handleSignout = () => {\n    Cookies.remove(\"username\");\n    Cookies.remove(\"fullname\");\n    Cookies.remove(\"authentication\");\n    Cookies.remove(\"remember\");\n    Cookies.remove(\"token\");\n  };\n\n  return (\n    <React.Fragment>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <Divider />\n        <Box flexGrow={1}>\n          <List>\n            <ListItem>\n              <ListItemText secondary={\"Account\"} />\n            </ListItem>\n            <ListItem>\n              <ListItemIcon>\n                <Avatar aria-label=\"recipe\" component=\"a\">\n                  {fullname ? fullname.charAt(0).toUpperCase() : \"\"}\n                </Avatar>\n              </ListItemIcon>\n              <ListItemText primary={fullname} />\n            </ListItem>\n          </List>\n        </Box>\n        <List>\n          <div className={classes.buttonSignOut}>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={handleSignout}\n              href=\"/\"\n            >\n              Sign out\n            </Button>\n          </div>\n        </List>\n      </Drawer>\n    </React.Fragment>\n  );\n}\n\nexport default RightDrawer;\n","import React, { useState } from \"react\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Link from \"@material-ui/core/Link\";\n\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CheckInIcon from \"../img/FridgeIn2.svg\";\nimport CheckOutIcon from \"../img/FridgeOut2.svg\";\n\nconst useStyles = makeStyles((theme) => ({\n  buttons: {\n    margin: 10,\n  },\n  avatarAdd: {\n    backgroundColor: theme.palette.success.main,\n  },\n  avatarCheck: {\n    backgroundColor: theme.palette.warning.main,\n  },\n  avatarDelete: {\n    backgroundColor: theme.palette.error.main,\n  },\n}));\n\nfunction HomeScreen({ handleChangePage }) {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Card className={classes.buttons}>\n        <CardActionArea>\n          <Link\n            onClick={() => {\n              handleChangePage(\"Add\");\n            }}\n            underline=\"none\"\n            color=\"textPrimary\"\n          >\n            <CardHeader\n              avatar={\n                <Avatar aria-label=\"recipe\" className={classes.avatarAdd}>\n                  <AddIcon fontSize='large' />\n                </Avatar>\n              }\n              title=\"Add\"\n              subheader=\"Scan new vials and add them to a project\"\n            />\n          </Link>\n        </CardActionArea>\n      </Card>\n      <Card className={classes.buttons}>\n        <CardActionArea>\n          <Link\n            onClick={() => {\n              handleChangePage(\"Check-out\");\n            }}\n            underline=\"none\"\n            color=\"textPrimary\"\n          >\n            <CardHeader\n              avatar={\n                <Avatar aria-label=\"recipe\" className={classes.avatarCheck}>\n                  <img src={CheckOutIcon} width={22} />\n                </Avatar>\n              }\n              title=\"Check-out\"\n              subheader=\"Scan vials and use them in the lab\"\n            />\n          </Link>\n        </CardActionArea>\n      </Card>\n      <Card className={classes.buttons}>\n        <CardActionArea>\n          <Link\n            onClick={() => {\n              handleChangePage(\"Check-in\");\n            }}\n            underline=\"none\"\n            color=\"textPrimary\"\n          >\n            <CardHeader\n              avatar={\n                <Avatar aria-label=\"recipe\" className={classes.avatarCheck}>\n                  <img src={CheckInIcon} width={22} />\n                </Avatar>\n              }\n              title=\"Check-in\"\n              subheader=\"Scan unused vials and place them in the fridge\"\n            />\n          </Link>\n        </CardActionArea>\n      </Card>\n      <Card className={classes.buttons}>\n        <CardActionArea>\n          <Link\n            onClick={() => {\n              handleChangePage(\"Delete\");\n            }}\n            underline=\"none\"\n            color=\"textPrimary\"\n          >\n            <CardHeader\n              avatar={\n                <Avatar aria-label=\"recipe\" className={classes.avatarDelete}>\n                  <CloseIcon fontSize='large' />\n                </Avatar>\n              }\n              title=\"Delete\"\n              subheader=\"Scan vials and delete them from the project\"\n            />\n          </Link>\n        </CardActionArea>\n      </Card>\n    </React.Fragment>\n  );\n}\n\nexport default HomeScreen;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Select from \"@material-ui/core/Select\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginBottom: theme.spacing(3),\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n  },\n  select: {\n    width: 200,\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n  },\n  arrange: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n}));\n\nfunction SelectProject({ selectedProject, projects, onProjectChange, isLoading }) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Typography variant=\"h5\" gutterBottom className={classes.title}>\n        Select project\n      </Typography>\n      <div className={classes.arrange}>\n        {isLoading ? (\n          <CircularProgress />\n        ) : (\n          <Select\n          native\n          variant=\"outlined\"\n          name=\"selectedproject\"\n          key=\"selectedproject_select\"\n          id=\"selectedproject_select\"\n          value={selectedProject.value}\n          onChange={onProjectChange}\n          className={classes.select}\n        >\n          {projects.map((item, index) => (\n            <option value={item.value} key={\"project_\"+item.name}>{item.name}</option>\n          ))}\n        </Select>\n        )\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default SelectProject;\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  makeStyles,\n  createMuiTheme,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport MaterialTable from \"material-table\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  inputLabel: {\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n  },\n  circular: {\n    color: theme.palette.success.main,\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n  },\n  chip: {\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n  },\n  button: {\n    // backgroundColor: theme.palette.success.main,\n    // color: \"#FFFF\",\n    // \"&:hover\": {\n    //   backgroundColor: theme.palette.success.dark,\n    //   color: \"#FFFFF\",\n    // },\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n  },\n  buttons: {\n    marginTop: theme.spacing(5),\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst themeTable = createMuiTheme({\n  overrides: {\n    MuiTableRow: {\n      root: {\n        \"&:hover\": {\n          backgroundColor: \"#f5f5f5\",\n        },\n      },\n    },\n  },\n});\n\nfunction ScanItems({\n  data,\n  selectedProject,\n  onDataChange,\n  onBarcodeSubmitted,\n  isLoading,\n}) {\n  const classes = useStyles();\n  const [barcode, setBarcode] = useState(\"\");\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    if (barcode !== \"\") {\n      onBarcodeSubmitted(barcode);\n      setBarcode(\"\");\n    }\n  };\n\n  const onChange = (event) => {\n    setBarcode(event.target.value);\n  };\n\n  const onEnterPressed = (event) => {\n    if (event.key === \"Enter\") {\n      if (!isLoading) {\n        onSubmit(event);\n      } else {\n        setBarcode(\"\");\n      }\n    } else {\n    }\n  };\n\n  return (\n    <div>\n      <ThemeProvider theme={themeTable}>\n        <MaterialTable\n          components={{\n            Container: (props) => <Paper {...props} elevation={0} />,\n          }}\n          title=\"Scanned vials\"\n          options={{\n            paging: false,\n            search: false,\n            showTitle: true,\n            toolbar: true,\n          }}\n          columns={[\n            { title: \"No\", field: \"id\", editable: \"never\" },\n            { title: \"Vial barcode\", field: \"barcode\", editable: \"never\" },\n            {\n              title: \"Project\",\n              field: \"project\",\n              editable: \"never\",\n              render: (rowData) => rowData[\"project\"][\"name\"],\n            },\n            { title: \"Box\", field: \"box\", editable: \"never\" },\n            { title: \"Position\", field: \"poslabel\", editable: \"never\" },\n            { title: \"Status\", field: \"status\", editable: \"never\" },\n            { title: \"Timestamp\", field: \"timestamp\", editable: \"never\" },\n            // { title: \"User\", field: \"username\", editable: \"never\" },\n          ]}\n          localization={{\n            header: {\n              actions: \"\",\n            },\n          }}\n          data={data}\n          editable={{\n            onRowDelete: (oldData) =>\n              new Promise((resolve, reject) => {\n                setTimeout(() => {\n                  {\n                    let dataCopy = Array.from(data);\n                    const index = dataCopy.indexOf(oldData);\n                    dataCopy.splice(index, 1);\n                    onDataChange(dataCopy);\n                  }\n                  resolve();\n                }, 10);\n              }),\n          }}\n        />\n      </ThemeProvider>\n      {isLoading && <LinearProgress/>}\n      <div className={classes.buttons}>\n        <Chip\n          disabled={true}\n          className={classes.chip}\n          label={selectedProject.name}\n        />\n        <TextField\n          variant=\"outlined\"\n          value={barcode}\n          name=\"barcode\"\n          key=\"scanitems_barcode\"\n          id=\"scanitems_barcode\"\n          label=\"Barcode\"\n          className={classes.inputLabel}\n          onChange={onChange}\n          onKeyPress={onEnterPressed}\n          autoFocus\n        />\n\n        <Button\n          name=\"barcode\"\n          variant=\"contained\"\n          aria-label=\"add\"\n          color=\"primary\"\n          className={classes.button}\n          onClick={onSubmit}\n          disabled={isLoading}\n        >\n          {isLoading && <CircularProgress size={35} />}\n          {!isLoading && <AddIcon fontSize=\"large\" />}\n        </Button>\n\n        {/* // <Button\n          //   name=\"barcode\"\n          //   variant=\"contained\"\n          //   aria-label=\"add\"\n          //   className={classes.button}\n          //   onClick={onSubmit}\n          // >\n          //   <AddIcon fontSize=\"large\" />\n          // </Button> */}\n      </div>\n    </div>\n  );\n}\n\nexport default ScanItems;\n","import React, { useState } from \"react\";\nimport MaterialTable from \"material-table\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Select from \"@material-ui/core/Select\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginBottom: theme.spacing(3),\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n  },\n  select: {\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n  },\n  line: {\n    // height: 40,\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n  },\n  block: {\n    width: 1000,\n    display: \"flex\",\n  },\n}));\n\nconst TableBarcodes = (props) => {\n  return (\n    <MaterialTable\n      components={{\n        Container: (props) => <Paper {...props} elevation={0} />,\n      }}\n      title=\"Response from CDD\"\n      options={{\n        paging: false,\n        search: false,\n        showTitle: true,\n        toolbar: true,\n        exportButton: true,\n        exportFileName: \"FailedSubmittedBarcodes\",\n        rowStyle: { height: 10 },\n      }}\n      columns={[\n        { title: \"CDD ID\", field: \"id\", editable: \"never\" },\n        { title: \"Vial barcode\", field: \"barcode\", editable: \"never\" },\n        { title: \"CDD Status\", field: \"status\", editable: \"never\" },\n        { title: \"CDD Location\", field: \"location\", editable: \"never\" },\n        {\n          title: \"CDD Response\",\n          field: \"message\",\n          editable: \"never\",\n          render: (rowData) => rowData[\"post response\"][\"message\"],\n        },\n        {\n          title: \"CDD Response\",\n          field: \"cddResponse\",\n          editable: \"never\",\n          render: (rowData) =>\n            JSON.stringify(rowData[\"post response\"][\"response\"]),\n        },\n      ]}\n      data={props.data}\n    />\n  );\n};\n\nfunction ItemsSubmitted({\n  isLoading,\n  allItemsSubmitted,\n  failedSubmittedItems,\n}) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.line}>\n      {isLoading ? (\n        <CircularProgress />\n      ) : allItemsSubmitted ? (\n        <Typography variant=\"h5\" gutterBottom className={classes.title}>\n          Items successfully submitted to database.\n        </Typography>\n      ) : (\n        <div>\n          <div className={classes.line}>\n            <Typography variant=\"subtitle1\" color=\"error\">\n              Not all items successfully submitted to database.\n            </Typography>\n          </div>\n          <br />\n          <TableBarcodes\n            data={failedSubmittedItems}\n            className={classes.block}\n          />\n          <br />\n          <div className={classes.line}>\n            <Typography variant=\"subtitle1\">Please report to Stijn</Typography>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ItemsSubmitted;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Select from \"@material-ui/core/Select\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginBottom: theme.spacing(3),\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n  },\n  select: {\n    width: 200,\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n  },\n  arrange: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n}));\n\nfunction PrintLabels() {\n  const classes = useStyles();\n  const [isLoading, setIsLoading] = useState(false);\n\n  return (\n    <div>\n      <Typography variant=\"h5\" gutterBottom className={classes.title}>\n        Print Labels\n      </Typography>\n      <div className={classes.arrange}>\n        {isLoading ? (\n          <CircularProgress />\n        ) : (\n          <div>\n            <Typography variant=\"subtitle1\">\n              Press the print labels button and follow the instructions, when\n              finshed 'submit' the items to CDD\n            </Typography>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PrintLabels;\n","import React, { useState } from \"react\";\n\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\n\nfunction MySnackbar({ open, data, handleSnackbar }) {\n  return (\n    <Snackbar\n      open={open}\n      autoHideDuration={10000}\n      onClose={handleSnackbar}\n    >\n      <Alert severity={data.type} onClose={handleSnackbar}>\n        <AlertTitle>{data.title}</AlertTitle>\n        {data.body}\n      </Alert>\n    </Snackbar>\n  );\n}\n\nexport default MySnackbar;\n","import React, { useState } from \"react\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nimport Button from \"@material-ui/core/Button\";\n\nfunction MyDialog({ open, data, handleDialog, handleYesDialog }) {\n  return (\n    <Dialog\n      open={open}\n      onClose={handleDialog}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{data.title}</DialogTitle>\n      {data.body && (\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {data.body}\n          </DialogContentText>\n        </DialogContent>\n      )}\n      <DialogActions>\n        <Button onClick={handleYesDialog} color=\"primary\">\n          Yes\n        </Button>\n        <Button onClick={handleDialog} color=\"primary\" autoFocus>\n          No\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default MyDialog;\n","// Check if barcode is unique in dataset\nexport function isBarcodeUnique(data, barcode) {\n  let isUnique = true;\n  data.forEach((item, index) => {\n    if (barcode === item.barcode) {\n      isUnique = false;\n      return isUnique;\n    }\n  });\n  return isUnique;\n}\n\n// Format dateTime-object to string\nexport function formatDate(dateTime) {\n  // Settings for HH:MM, DD MMM YYYY\n  const monthNames = [\n    \"Jan\",\n    \"Feb\",\n    \"Mrt\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sept\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  //  Setting for HH:MM, DD MMM YYYY\n  let month = monthNames[dateTime.getMonth()];\n  let day = \"\" + dateTime.getDate();\n  let year = \"\" + dateTime.getFullYear();\n  let hours = \"\" + dateTime.getHours();\n  let min = \"\" + dateTime.getMinutes();\n\n  // month = month.length > 1 ? month : \"0\" + month;\n  day = day.length > 1 ? day : \"0\" + day;\n  hours = hours.length > 1 ? hours : \"0\" + hours;\n  min = min.length > 1 ? min : \"0\" + min;\n\n  return \"\" + hours + \":\" + min + \", \" + day + \" \" + month + \" \" + year;\n}\n\n/**\n * Returns next box and position\n *\n * @param {integer} box   box [1,inf]\n * @param {integer} pos   position [11,12...18,19,21,22...,28,29,31,32......98,99]\n */\nexport function nextLocation(box, pos) {\n  let nextBox = 1;\n  let nextPos = 11;\n\n  if (!box && !pos) {\n    // No correct values given, start with beginning\n    return [nextBox, nextPos];\n  }\n\n  if (pos >= 99) {\n    // Last position, go to next box\n    nextBox = box + 1;\n    nextPos = 11;\n  } else if (pos % 10 === 9) {\n    // At the end of a row, go to next row (+2), same box\n    nextBox = box;\n    nextPos = pos + 2;\n  } else {\n    // Same box, next position\n    nextBox = box;\n    nextPos = pos + 1;\n  }\n\n  return [nextBox, nextPos];\n}\n\n/**\n * Returns previous box and position\n *\n * @param {integer} box   box [1,inf]\n * @param {integer} pos   position [11,12...18,19,21,22...,28,29,31,32......98,99]\n */\nexport function previousLocation(box, pos) {\n  let prevBox = 1;\n  let prevPos = 11;\n\n  // No correct values given, start with beginning\n  if ((!box && !pos) || (box === 1 && pos === 11)) {\n    return [prevBox, prevPos];\n  }\n\n  if (pos <= 11) {\n    // First position, go to previous box\n    prevBox = box - 1;\n    prevPos = 99;\n  } else if (pos % 10 === 1) {\n    // At the beginning of a row, go to prev row (-2), same box\n    prevBox = box;\n    prevPos = pos - 2;\n  } else {\n    // Same box, previous position\n    prevBox = box;\n    prevPos = pos - 1;\n  }\n\n  return [prevBox, prevPos];\n}\n\n/**\n * Maps position in string format [A1,A2,A3,...,I7,I8,I9] format to integer [11,12,13,...,97,98,99] format\n *\n * @param {string} string   position [A1,A2...A8,A9,B1,B2...,B8,B9,C1,C2......I8,I9]\n */\nexport function posStringToInteger(string) {\n  const row = string.substring(0, 1);\n  const col = parseInt(string.substring(1, 2));\n\n  const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\"];\n  const rowIndex = (letters.indexOf(row) + 1) * 10;\n  const colIndex = col;\n\n  const result = rowIndex + colIndex;\n\n  return result;\n}\n\n/**\n * Maps position in integer [11,12,13,...,97,98,99] format to string format [A1,A2,A3,...,I7,I8,I9]\n *\n * @param {integer} pos   position [11,12...18,19,21,22...,28,29,31,32......98,99]\n */\nexport function posIntegerToString(pos) {\n  const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\"];\n  const rowLetter = letters[Math.floor(pos / 10) - 1];\n  const colIndex = pos % 10;\n\n  const result = rowLetter + colIndex.toString();\n\n  return result;\n}\n\nexport function sendMail(body) {\n  var link =\n    \"mailto:fjonkman@zobio.com?\" +\n    \"subject=\" +\n    escape(\"Scanned items failed\") +\n    \"&body=\" +\n    escape(body);\n\n  window.open(link, \"_blank\");\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Cookies from \"js-cookie\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport SelectProject from \"./Pages/SelectProject\";\nimport ScanItems from \"./Pages/ScanItems\";\nimport ItemsSubmitted from \"./Pages/ItemsSubmitted\";\nimport PrintLabels from \"./Pages/PrintLabels\";\nimport MySnackbar from \"./Components/MySnackbar\";\nimport MyDialog from \"./Components/MyDialog\";\n\nimport {\n  fetchSendData,\n  fetchProjects,\n  fetchPosition,\n  fetchLastPosition,\n} from \"../ApiFunctions\";\nimport {\n  isBarcodeUnique,\n  formatDate,\n  posIntegerToString,\n  posStringToInteger,\n  nextLocation,\n} from \"./Functions/ScanFunctions\";\n\n// Styles\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      maxWidth: 1200,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nfunction Add({ handleChangePage }) {\n  // Styles\n  const classes = useStyles();\n\n  // Page states\n  const [activeStep, setActiveStep] = useState(0); // int, stepper: 1,2,3,4,5\n  const [isLoading, setIsLoading] = useState(false); // bool, is the page loading\n  const [openSnackbar, setOpenSnackbar] = useState(false); // bool, open the snackbar\n  const [dataSnackbar, setDataSnackbar] = useState({\n    type: \"error\",\n    title: null,\n    body: null,\n  });\n  const [openDialog, setOpenDialog] = useState(false); // bool, open the dialog window\n\n  // Data submition states\n  const [allItemsSubmitted, setAllItemsSubmitted] = useState(false); // bool, did the submission of all items succeed\n  const [failedSubmittedItems, setFailedSubmittedItems] = useState([]); // dic, data of failed submitted items\n\n  // Location of vials states\n  const [lastLocation, setLastLocation] = useState([null, null]); // list [int, int], last occupied position of project, DYNAMIC\n  const [firstLocation, setFirstLocation] = useState([null, null]); // list [int, int], last occupied position as in CDD, STATIC\n\n  // Data states\n  const [data, setData] = useState([]); // dic, data of all scanned items\n  const [projects, setProjects] = useState([\n    {\n      value: 0,\n      id: 0,\n      name: \"\",\n    },\n  ]); // dic, data of projects, 0 is no project\n  const [selectedProject, setSelectecProject] = useState(projects[0]); // dic, data of selected project\n\n  // Load the projects from Database, only once\n  useEffect(() => {\n    setIsLoading(true);\n    fetchProjects()\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200 && response.statusText === \"OK\") {\n          console.log(response.data[\"message\"]);\n          const array = projects.concat(response.data[\"output\"][\"projects\"]);\n          array.forEach((item, index) => {\n            array[index].value = index;\n          });\n          setProjects(array);\n        } else {\n          console.error(\"ERROR: Request succeeded, but status not 200\");\n          console.error(response);\n        }\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        if (error.response) {\n          console.error(\n            `ERROR fetchProjects(), status: ${error.response.status}, statusText: ${error.response.statusText}, message: '${error.response.data[\"message\"]}'`\n          );\n        } else {\n          console.error(error);\n        }\n        setIsLoading(false);\n      });\n  }, []);\n\n  // Load the last filled location of the project from Database\n  useEffect(() => {\n    if (selectedProject.value !== 0) {\n      setIsLoading(true);\n      fetchLastPosition(selectedProject)\n        .then((response) => {\n          console.log(response);\n          if (\n            response &&\n            response.status === 200 &&\n            response.statusText === \"OK\"\n          ) {\n            console.log(response.data[\"message\"]);\n            const [lastBox, lastPos] = response.data[\"output\"][\n              \"last location\"\n            ].slice(1, 3);\n            setFirstLocation([lastBox, lastPos]);\n            setLastLocation([lastBox, lastPos]);\n          }\n          setIsLoading(false);\n        })\n        .catch((error) => {\n          if (error.response) {\n            console.error(\n              `ERROR fetchLastPosition(), status: ${error.response.status}, statusText: ${error.response.statusText}, message: '${error.response.data[\"message\"]}'`\n            );\n          } else {\n            console.error(error);\n          }\n          setIsLoading(false);\n        });\n    }\n  }, [selectedProject]);\n\n  // When project changed, delete all data\n  const handleProjectChange = (event) => {\n    setSelectecProject(projects[event.target.value]);\n    setData([]);\n    setOpenSnackbar(false);\n  };\n\n  // Data is changed (delete button clicked)\n  const handleDataChanged = (newData) => {\n    let box;\n    let pos;\n    newData.forEach((item, index) => {\n      newData[index].id = index + 1; // Renumber indeces\n      box = newData[index].box; // Select last box\n      pos = posStringToInteger(newData[index].poslabel); // Select last position\n    });\n\n    // Get last location\n    const lastBox = lastLocation[0];\n    const lastPos = lastLocation[1];\n\n    if (!pos && !box) {\n      // Empty array, all items are deleted, return to first location from Database\n      setLastLocation(firstLocation);\n    } else if (!(box === lastBox && pos === lastPos)) {\n      // If last location in data is NOT equal to lastLocation, reset lastLocation\n      setLastLocation([box, pos]);\n      console.log(\n        \"Latest position NOT the same as lastLocation\",\n        `box: ${lastBox} -> ${box}, pos: ${lastPos} -> ${pos}`\n      );\n    }\n\n    setData(newData);\n  };\n\n  const handleBarcodeSubmitted = (barcode) => {\n    setOpenSnackbar(false);\n\n    if (!isBarcodeUnique(data, barcode)) {\n      // Barcode not unique\n      setDataSnackbar({\n        type: \"error\",\n        title: \"Error\",\n        body: \"Barcode already scanned.\",\n      });\n      setOpenSnackbar(true);\n      return;\n    }\n\n    setIsLoading(true);\n    fetchPosition(\"Add\", barcode, selectedProject)\n      .then((response) => {\n        console.log(response);\n\n        if (response.status === 200 && response.statusText === \"OK\") {\n          if (!response.data[\"output\"][\"isInCDD\"]) {\n            setDataSnackbar({\n              type: \"error\",\n              title: \"Error\",\n              body: (\n                <React.Fragment>\n                  <strong>{barcode}</strong>\n                  {\" not found in CDD Vault.\"}\n                </React.Fragment>\n              ),\n            });\n            setIsLoading(false);\n            setOpenSnackbar(true);\n            return;\n          }\n          if (!response.data[\"output\"][\"isInCorrectProject\"]) {\n            setDataSnackbar({\n              type: \"error\",\n              title: \"Error\",\n              body: (\n                <React.Fragment>\n                  <strong>{barcode}</strong>\n                  {\" found in different project: \"}\n                  <strong>\n                    {response.data[\"output\"][\"vialData\"][\"project\"][\"name\"]}\n                  </strong>\n                </React.Fragment>\n              ),\n            });\n            setIsLoading(false);\n            setOpenSnackbar(true);\n            return;\n          }\n          if (!response.data[\"output\"][\"isCorrectStatus\"]) {\n            setDataSnackbar({\n              type: \"error\",\n              title: \"Error\",\n              body: (\n                <React.Fragment>\n                  <strong>{barcode}</strong>\n                  {\" has incorrect status: \"}\n                  <strong>\n                    {response.data[\"output\"][\"vialData\"][\"Status\"]}\n                  </strong>\n                  {\".\"}\n                  <br />\n                  {\"Only vials with status 'Registered' can be added.\"}\n                </React.Fragment>\n              ),\n            });\n            setIsLoading(false);\n            setOpenSnackbar(true);\n            return;\n          }\n\n          const id = data.length + 1;\n          const project = selectedProject;\n          const [box, pos] = nextLocation(lastLocation[0], lastLocation[1]);\n          const poslabel = posIntegerToString(pos);\n          const status = response.data[\"output\"][\"vialData\"][\"Status\"];\n          const timestamp = formatDate(new Date(Date.now()));\n          const username = Cookies.get(\"username\");\n          const fullname = Cookies.get(\"fullname\");\n          const newData = data;\n\n          newData.push({\n            id,\n            barcode,\n            project,\n            box,\n            poslabel,\n            status,\n            timestamp,\n            username,\n            fullname,\n          });\n\n          setData(newData); // Update data\n\n          setLastLocation([box, pos]); // Update last location\n\n          // Give success snackbar\n          setDataSnackbar({\n            type: \"success\",\n            title: \"Success\",\n            body: (\n              <React.Fragment>\n                <strong>{barcode}</strong>\n                {\" to \"}\n                <strong>{box + \"-\" + poslabel}</strong>\n              </React.Fragment>\n            ),\n          });\n          setOpenSnackbar(true);\n        } else {\n          console.error(\"ERROR: Request succeeded, but status not 200\");\n          console.error(response);\n        }\n        setIsLoading(false);\n        return;\n      })\n      .catch((error) => {\n        if (error.response) {\n          console.error(\n            `ERROR fetchPosition(), status: ${error.response.status}, statusText: ${error.response.statusText}, message: '${error.response.data[\"message\"]}'`\n          );\n        } else {\n          console.error(error);\n        }\n        setIsLoading(false);\n        return;\n      });\n  };\n\n  // Next button is clicked\n  const handleNext = () => {\n    if (activeStep === 0 && selectedProject.value === 0) {\n      // If no project is selected, give error\n      setDataSnackbar({\n        type: \"error\",\n        title: \"Error\",\n        body: \"No project selected.\",\n      });\n      setOpenSnackbar(true);\n    } else if (activeStep === 1 && data.length === 0) {\n      // No data in input\n      setDataSnackbar({\n        type: \"error\",\n        title: \"Error\",\n        body: \"No items scanned.\",\n      });\n      setOpenSnackbar(true);\n    } else {\n      // Else continue\n      setActiveStep(activeStep + 1);\n    }\n  };\n\n  // Back button is clicked\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  // Print button is clicked\n  const handlePrint = () => {\n    console.log(\"Add: handlePrint: printing data\");\n    console.log(data);\n  };\n\n  // Function if snackbar should be opened/closed\n  const handleSnackbar = () => {\n    if (openSnackbar) {\n      setOpenSnackbar(false);\n    } else {\n      setOpenSnackbar(true);\n    }\n  };\n\n  // Function if dialog should be opened/closed\n  const handleDialog = () => {\n    if (openDialog) {\n      setOpenDialog(false);\n    } else {\n      setOpenDialog(true);\n    }\n  };\n\n  // If 'Yes' button in dialog at step 4 is clicked, so submit results\n  const handleYesDialog = async () => {\n    handleNext();\n    setOpenDialog(false);\n    setIsLoading(true);\n\n    fetchSendData(\"Add\", data)\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200 && response.statusText === \"OK\") {\n          console.log(response.data[\"message\"]);\n          if (response.data[\"output\"][\"success\"]) {\n            setAllItemsSubmitted(true);\n          } else {\n            setAllItemsSubmitted(false);\n            setFailedSubmittedItems(response.data[\"output\"][\"failedVials\"]);\n          }\n        } else {\n          console.error(\"ERROR: Request succeeded, but status not 200\");\n          console.error(response);\n        }\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        if (error.response) {\n          console.error(\n            `ERROR fetchSendData(), status: ${error.response.status}, statusText: ${error.response.statusText}, message: '${error.response.data[\"message\"]}'`\n          );\n        } else {\n          console.error(error);\n        }\n        setIsLoading(false);\n      });\n  };\n\n  // Labels of steps\n  const steps = [\"Select project\", \"Scan items\", \"Print Labels\"];\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <SelectProject\n            selectedProject={selectedProject}\n            projects={projects}\n            onProjectChange={handleProjectChange}\n            isLoading={isLoading}\n          />\n        );\n      case 1:\n        return (\n          <ScanItems\n            data={data}\n            selectedProject={selectedProject}\n            onDataChange={handleDataChanged}\n            onBarcodeSubmitted={handleBarcodeSubmitted}\n            isLoading={isLoading}\n          />\n        );\n      case 2:\n        return <PrintLabels />;\n      case 3:\n        return (\n          <ItemsSubmitted\n            isLoading={isLoading}\n            allItemsSubmitted={allItemsSubmitted}\n            failedSubmittedItems={failedSubmittedItems}\n          />\n        );\n      default:\n        return <React.Fragment> Error: this step not found. </React.Fragment>;\n    }\n  }\n\n  function getButtonContent(step) {\n    let contents = [];\n\n    if (step !== 0 && step !== 3) {\n      contents.push(\n        <Button\n          key=\"button_back\"\n          name=\"button_back\"\n          onClick={handleBack}\n          // variant=\"contained\"\n          className={classes.button}\n        >\n          Back\n        </Button>\n      );\n    }\n    if (step === 2) {\n      contents.push(\n        <Button\n          key=\"button_printlabel\"\n          name=\"button_printlabel\"\n          onClick={handlePrint}\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.button}\n        >\n          Print Labels\n        </Button>\n      );\n      contents.push(\n        <Button\n          variant=\"contained\"\n          name=\"button_submit\"\n          key=\"button_submit\"\n          color=\"primary\"\n          onClick={handleDialog}\n          className={classes.button}\n        >\n          Submit\n        </Button>\n      );\n    }\n    if (step === 0 || step === 1) {\n      contents.push(\n        <Button\n          variant=\"contained\"\n          name=\"button_next\"\n          key=\"button_next\"\n          color=\"primary\"\n          onClick={handleNext}\n          className={classes.button}\n        >\n          Next\n        </Button>\n      );\n    }\n\n    if (step === 3)\n      contents.push(\n        <Button\n          variant=\"contained\"\n          name=\"button_end\"\n          key=\"button_end\"\n          color=\"primary\"\n          onClick={() => {\n            handleChangePage(\"Home\");\n          }}\n          className={classes.button}\n        >\n          End\n        </Button>\n      );\n\n    return contents;\n  }\n\n  //   console.log(stackLocked);\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Add\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            <React.Fragment>\n              {getStepContent(activeStep)}\n              <div className={classes.buttons}>\n                {getButtonContent(activeStep)}\n              </div>\n              <MySnackbar\n                open={openSnackbar}\n                data={dataSnackbar}\n                handleSnackbar={handleSnackbar}\n              />\n              <MyDialog\n                open={openDialog}\n                data={{\n                  title:\n                    \"Are you sure you want to submit the scanned items to CDD?\",\n                  body: \"The labels must be printed before submitting to CDD.\",\n                }}\n                handleDialog={handleDialog}\n                handleYesDialog={handleYesDialog}\n              />\n            </React.Fragment>\n          </React.Fragment>\n        </Paper>\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default Add;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Cookies from \"js-cookie\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport SelectProject from \"./Pages/SelectProject\";\nimport ScanItems from \"./Pages/ScanItems\";\nimport ItemsSubmitted from \"./Pages/ItemsSubmitted\";\nimport MySnackbar from \"./Components/MySnackbar\";\nimport MyDialog from \"./Components/MyDialog\";\n\nimport {\n  fetchSendData,\n  fetchProjects,\n  fetchPosition,\n} from \"../ApiFunctions\";\nimport {\n  isBarcodeUnique,\n  formatDate,\n  posIntegerToString,\n} from \"./Functions/ScanFunctions\";\n\n// Styles\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      maxWidth: 1200,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nfunction Delete({ handleChangePage }) {\n  // Styles\n  const classes = useStyles();\n\n  // Page states\n  const [activeStep, setActiveStep] = useState(0); // int, stepper: 1,2,3,4,5\n  const [isLoading, setIsLoading] = useState(false); // bool, is the page loading\n  const [openSnackbar, setOpenSnackbar] = useState(false); // bool, open the snackbar\n  const [dataSnackbar, setDataSnackbar] = useState({\n    type: \"error\",\n    title: null,\n    body: null,\n  });\n  const [openDialog, setOpenDialog] = useState(false); // bool, open the dialog window\n\n  // Data submition states\n  const [allItemsSubmitted, setAllItemsSubmitted] = useState(false); // bool, did the submission of all items succeed\n  const [failedSubmittedItems, setFailedSubmittedItems] = useState([]); // dic, data of failed submitted items\n\n  // Data states\n  const [data, setData] = useState([]); // dic, data of all scanned items\n  const [projects, setProjects] = useState([\n    {\n      value: 0,\n      id: 0,\n      name: \"\",\n    },\n  ]); // dic, data of projects, 0 is no project\n  const [selectedProject, setSelectecProject] = useState(projects[0]); // dic, data of selected project\n\n  // Load the projects from Database, only once\n  useEffect(() => {\n    setIsLoading(true);\n    fetchProjects()\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200 && response.statusText === \"OK\") {\n          console.log(response.data[\"message\"]);\n          const array = projects.concat(response.data[\"output\"][\"projects\"]);\n          array.forEach((item, index) => {\n            array[index].value = index;\n          });\n          setProjects(array);\n        } else {\n          console.error(\"ERROR: Request succeeded, but status not 200\");\n          console.error(response);\n        }\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        if (error.response) {\n          console.error(\n            `ERROR fetchProjects(), status: ${error.response.status}, statusText: ${error.response.statusText}, message: '${error.response.data[\"message\"]}'`\n          );\n        } else {\n          console.error(error);\n        }\n        setIsLoading(false);\n      });\n  }, []);\n\n  // When project changed, delete all data\n  const handleProjectChange = (event) => {\n    setSelectecProject(projects[event.target.value]);\n    setData([]);\n    setOpenSnackbar(false);\n  };\n\n  // Data is changed (delete button clicked)\n  const handleDataChanged = (newData) => {\n    // let box;\n    // let pos;\n    newData.forEach((item, index) => {\n      newData[index].id = index + 1; // Renumber indeces\n    });\n\n    setData(newData);\n  };\n\n  // Barcode is scanned and added to list, (green plus button is clicked)\n  const handleBarcodeSubmitted = (barcode) => {\n    setOpenSnackbar(false);\n\n    if (!isBarcodeUnique(data, barcode)) {\n      // Barcode not unique\n      setDataSnackbar({\n        type: \"error\",\n        title: \"Error\",\n        body: \"Barcode already scanned.\",\n      });\n      setOpenSnackbar(true);\n      return;\n    }\n\n    setIsLoading(true);\n    fetchPosition(\"Delete\", barcode, selectedProject)\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200 && response.statusText === \"OK\") {\n          if (!response.data[\"output\"][\"isInCDD\"]) {\n            setDataSnackbar({\n              type: \"error\",\n              title: \"Error\",\n              body: (\n                <React.Fragment>\n                  <strong>{barcode}</strong>\n                  {\" not found in CDD Vault.\"}\n                </React.Fragment>\n              ),\n            });\n            setIsLoading(false);\n            setOpenSnackbar(true);\n            return;\n          }\n          if (!response.data[\"output\"][\"isInCorrectProject\"]) {\n            setDataSnackbar({\n              type: \"error\",\n              title: \"Error\",\n              body: (\n                <React.Fragment>\n                  <strong>{barcode}</strong>\n                  {\" found in different project: \"}\n                  <strong>\n                    {response.data[\"output\"][\"vialData\"][\"project\"][\"name\"]}\n                  </strong>\n                </React.Fragment>\n              ),\n            });\n            setIsLoading(false);\n            setOpenSnackbar(true);\n            return;\n          }\n          if (!response.data[\"output\"][\"isCorrectStatus\"]) {\n            setDataSnackbar({\n              type: \"error\",\n              title: \"Error\",\n              body: (\n                <React.Fragment>\n                  <strong>{barcode}</strong>\n                  {\" has incorrect status: \"}\n                  <strong>\n                    {response.data[\"output\"][\"vialData\"][\"Status\"]}\n                  </strong>\n                  {\".\"}\n                  <br />\n                  {\"Allowed statuses are 'Added', 'Checked in', 'Checked out'.\"}\n                </React.Fragment>\n              ),\n            });\n            setIsLoading(false);\n            setOpenSnackbar(true);\n            return;\n          }\n\n          const id = data.length + 1;\n          const [, box, pos] = response.data[\"output\"][\"locationArray\"];\n          const project = selectedProject\n          const poslabel = posIntegerToString(pos);\n          const status = response.data[\"output\"][\"vialData\"][\"Status\"];\n          const timestamp = formatDate(new Date(Date.now()));\n          const username = Cookies.get(\"username\");\n          const fullname = Cookies.get(\"fullname\");\n          const newData = data;\n\n          newData.push({\n            id,\n            barcode,\n            project,\n            box,\n            poslabel,\n            status,\n            timestamp,\n            username,\n            fullname\n          });\n          setData(newData); // Update data\n\n          // Give success snackbar\n          setDataSnackbar({\n            type: \"success\",\n            title: \"Success\",\n            body: (\n              <React.Fragment>\n                <strong>{barcode}</strong>\n                {\" with status \"} <strong>{status}</strong>\n                {\" found at  \"}\n                <strong>{project.name + \"-\" + box + \"-\" + poslabel}</strong>\n              </React.Fragment>\n            ),\n          });\n          setOpenSnackbar(true);\n        } else {\n          console.error(\"ERROR: Request succeeded, but status not 200\");\n          console.error(response);\n        }\n        setIsLoading(false);\n        return;\n      })\n      .catch((error) => {\n        if (error.response) {\n          console.error(\n            `ERROR fetchPosition(), status: ${error.response.status}, statusText: ${error.response.statusText}, message: '${error.response.data[\"message\"]}'`\n          );\n        } else {\n          console.error(error);\n        }\n        setIsLoading(false);\n        return;\n      });\n  };\n\n  // Next button is clicked\n  const handleNext = () => {\n    if (activeStep === 0 && selectedProject.value === 0) {\n      // If no project is selected, give error\n      setDataSnackbar({\n        type: \"error\",\n        title: \"Error\",\n        body: \"No project selected.\",\n      });\n      setOpenSnackbar(true);\n    } else if (activeStep === 1 && data.length === 0) {\n      // No data in input\n      setDataSnackbar({\n        type: \"error\",\n        title: \"Error\",\n        body: \"No items scanned.\",\n      });\n      setOpenSnackbar(true);\n    } else {\n      // Else continue\n      setActiveStep(activeStep + 1);\n    }\n  };\n\n  // Back button is clicked\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  // Function if snackbar should be opened/closed\n  const handleSnackbar = () => {\n    if (openSnackbar) {\n      setOpenSnackbar(false);\n    } else {\n      setOpenSnackbar(true);\n    }\n  };\n\n  // Function if dialog should be opened/closed\n  const handleDialog = () => {\n    if (openDialog) {\n      setOpenDialog(false);\n    } else {\n      setOpenDialog(true);\n    }\n  };\n\n  // If 'Yes' button in dialog at step 4 is clicked, so submit results\n  const handleYesDialog = async () => {\n    handleNext();\n    setOpenDialog(false);\n    setIsLoading(true);\n\n    fetchSendData(\"Delete\", data)\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200 && response.statusText === \"OK\") {\n          console.log(response.data[\"message\"]);\n          if (response.data[\"output\"][\"success\"]) {\n            setAllItemsSubmitted(true);\n          } else {\n            setAllItemsSubmitted(false);\n            setFailedSubmittedItems(response.data[\"output\"][\"failedVials\"]);\n          }\n        } else {\n          console.error(\"ERROR: Request succeeded, but status not 200\");\n          console.error(response);\n        }\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        if (error.response) {\n          console.error(\n            `ERROR fetchSendData(), status: ${error.response.status}, statusText: ${error.response.statusText}, message: '${error.response.data[\"message\"]}'`\n          );\n        } else {\n          console.error(error);\n        }\n        setIsLoading(false);\n      });\n  };\n\n  // Labels of steps\n  const steps = [\"Select project\", \"Scan items\"];\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <SelectProject\n            selectedProject={selectedProject}\n            projects={projects}\n            onProjectChange={handleProjectChange}\n            isLoading={isLoading}\n          />\n        );\n      case 1:\n        return (\n          <ScanItems\n            data={data}\n            isLoading={isLoading}\n            selectedProject={selectedProject}\n            onDataChange={handleDataChanged}\n            onBarcodeSubmitted={handleBarcodeSubmitted}\n          />\n        );\n      case 2:\n        return (\n          <ItemsSubmitted\n            isLoading={isLoading}\n            allItemsSubmitted={allItemsSubmitted}\n            failedSubmittedItems={failedSubmittedItems}\n          />\n        );\n      default:\n        return <React.Fragment> Error: this step not found. </React.Fragment>;\n    }\n  }\n\n  function getButtonContent(step) {\n    let contents = [];\n\n    if (step !== 0 && step !== 2) {\n      contents.push(\n        <Button\n          key=\"button_back\"\n          name=\"button_back\"\n          onClick={handleBack}\n          // variant=\"contained\"\n          className={classes.button}\n        >\n          Back\n        </Button>\n      );\n    }\n    if (step === 1 && data.length > 0) {\n      contents.push(\n        <Button\n          variant=\"contained\"\n          name=\"button_submit\"\n          key=\"button_submit\"\n          color=\"primary\"\n          onClick={handleDialog}\n          className={classes.button}\n        >\n          Submit\n        </Button>\n      );\n    }\n    if (step === 0) {\n      contents.push(\n        <Button\n          variant=\"contained\"\n          name=\"button_next\"\n          key=\"button_next\"\n          color=\"primary\"\n          onClick={handleNext}\n          className={classes.button}\n        >\n          Next\n        </Button>\n      );\n    }\n    if (step === 2)\n      contents.push(\n        <Button\n          variant=\"contained\"\n          name=\"button_end\"\n          key=\"button_end\"\n          color=\"primary\"\n          onClick={() => {\n            handleChangePage(\"Home\");\n          }}\n          className={classes.button}\n        >\n          End\n        </Button>\n      );\n\n    return contents;\n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Delete\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            <React.Fragment>\n              {getStepContent(activeStep)}\n              <div className={classes.buttons}>\n                {getButtonContent(activeStep)}\n              </div>\n              <MySnackbar\n                open={openSnackbar}\n                data={dataSnackbar}\n                handleSnackbar={handleSnackbar}\n              />\n              <MyDialog\n                open={openDialog}\n                data={{\n                  title:\n                    \"Are you sure you want to submit the scanned items to CDD?\",\n                }}\n                handleDialog={handleDialog}\n                handleYesDialog={handleYesDialog}\n              />\n            </React.Fragment>\n          </React.Fragment>\n        </Paper>\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default Delete;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Cookies from \"js-cookie\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport SelectProject from \"./Pages/SelectProject\";\nimport ScanItems from \"./Pages/ScanItems\";\nimport ItemsSubmitted from \"./Pages/ItemsSubmitted\";\nimport MySnackbar from \"./Components/MySnackbar\";\nimport MyDialog from \"./Components/MyDialog\";\n\nimport {\n  fetchSendData,\n  fetchProjects,\n  fetchPosition,\n} from \"../ApiFunctions\";\nimport {\n  isBarcodeUnique,\n  formatDate,\n  posIntegerToString,\n} from \"./Functions/ScanFunctions\";\n\n// Styles\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      maxWidth: 1200,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nfunction CheckIn({ handleChangePage }) {\n  // Styles\n  const classes = useStyles();\n\n  // Page states\n  const [activeStep, setActiveStep] = useState(0); // int, stepper: 1,2,3,4,5\n  const [isLoading, setIsLoading] = useState(false); // bool, is the page loading\n  const [openSnackbar, setOpenSnackbar] = useState(false); // bool, open the snackbar\n  const [dataSnackbar, setDataSnackbar] = useState({\n    type: \"error\",\n    title: null,\n    body: null,\n  });\n  const [openDialog, setOpenDialog] = useState(false); // bool, open the dialog window\n\n  // Data submition states\n  const [allItemsSubmitted, setAllItemsSubmitted] = useState(false); // bool, did the submission of all items succeed\n  const [failedSubmittedItems, setFailedSubmittedItems] = useState([]); // dic, data of failed submitted items\n\n  // Data states\n  const [data, setData] = useState([]); // dic, data of all scanned items\n  const [projects, setProjects] = useState([\n    {\n      value: 0,\n      id: 0,\n      name: \"\",\n    },\n  ]); // dic, data of projects, 0 is no project\n  const [selectedProject, setSelectecProject] = useState(projects[0]); // dic, data of selected project\n\n  // Load the projects from Database, only once\n  useEffect(() => {\n    setIsLoading(true);\n    fetchProjects()\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200 && response.statusText === \"OK\") {\n          console.log(response.data[\"message\"]);\n          const array = projects.concat(response.data[\"output\"][\"projects\"]);\n          array.forEach((item, index) => {\n            array[index].value = index;\n          });\n          setProjects(array);\n        } else {\n          console.error(\"ERROR: Request succeeded, but status not 200\");\n          console.error(response);\n        }\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        if (error.response) {\n          console.error(\n            `ERROR fetchProjects(), status: ${error.response.status}, statusText: ${error.response.statusText}, message: '${error.response.data[\"message\"]}'`\n          );\n        } else {\n          console.error(error);\n        }\n        setIsLoading(false);\n      });\n  }, []);\n\n  // When project changed, delete all data\n  const handleProjectChange = (event) => {\n    setSelectecProject(projects[event.target.value]);\n    setData([]);\n    setOpenSnackbar(false);\n  };\n\n  // Data is changed (delete button clicked)\n  const handleDataChanged = (newData) => {\n    // let box;\n    // let pos;\n    newData.forEach((item, index) => {\n      newData[index].id = index + 1; // Renumber indeces\n    });\n\n    setData(newData);\n  };\n\n  // Barcode is scanned and added to list, (green plus button is clicked)\n  const handleBarcodeSubmitted = (barcode) => {\n    setOpenSnackbar(false);\n\n    if (!isBarcodeUnique(data, barcode)) {\n      // Barcode not unique\n      setDataSnackbar({\n        type: \"error\",\n        title: \"Error\",\n        body: \"Barcode already scanned.\",\n      });\n      setOpenSnackbar(true);\n      return;\n    }\n\n    setIsLoading(true);\n    fetchPosition(\"Check-in\", barcode, selectedProject)\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200 && response.statusText === \"OK\") {\n          if (!response.data[\"output\"][\"isInCDD\"]) {\n            setDataSnackbar({\n              type: \"error\",\n              title: \"Error\",\n              body: (\n                <React.Fragment>\n                  <strong>{barcode}</strong>\n                  {\" not found in CDD Vault.\"}\n                </React.Fragment>\n              ),\n            });\n            setIsLoading(false);\n            setOpenSnackbar(true);\n            return;\n          }\n          if (!response.data[\"output\"][\"isInCorrectProject\"]) {\n            setDataSnackbar({\n              type: \"error\",\n              title: \"Error\",\n              body: (\n                <React.Fragment>\n                  <strong>{barcode}</strong>\n                  {\" found in different project: \"}\n                  <strong>\n                    {response.data[\"output\"][\"vialData\"][\"project\"][\"name\"]}\n                  </strong>\n                </React.Fragment>\n              ),\n            });\n            setIsLoading(false);\n            setOpenSnackbar(true);\n            return;\n          }\n          if (!response.data[\"output\"][\"isCorrectStatus\"]) {\n            setDataSnackbar({\n              type: \"error\",\n              title: \"Error\",\n              body: (\n                <React.Fragment>\n                  <strong>{barcode}</strong>\n                  {\" has incorrect status: \"}\n                  <strong>\n                    {response.data[\"output\"][\"vialData\"][\"Status\"]}\n                  </strong>\n                  {\".\"}\n                  <br />\n                  {\"Only vials with status 'Checked out' can be checked-in.\"}\n                </React.Fragment>\n              ),\n            });\n            setIsLoading(false);\n            setOpenSnackbar(true);\n            return;\n          }\n\n          const id = data.length + 1;\n          const [, box, pos] = response.data[\"output\"][\"locationArray\"];\n          const project = selectedProject\n          const poslabel = posIntegerToString(pos);\n          const status = response.data[\"output\"][\"vialData\"][\"Status\"];\n          const timestamp = formatDate(new Date(Date.now()));\n          const username = Cookies.get(\"username\");\n          const fullname = Cookies.get(\"fullname\");\n          const newData = data;\n\n          newData.push({\n            id,\n            barcode,\n            project,\n            box,\n            poslabel,\n            status,\n            timestamp,\n            username,\n            fullname\n          });\n          setData(newData); // Update data\n\n          // Give success snackbar\n          setDataSnackbar({\n            type: \"success\",\n            title: \"Success\",\n            body: (\n              <React.Fragment>\n                <strong>{barcode}</strong>\n                {\" with status \"} <strong>{status}</strong>\n                {\" found at  \"}\n                <strong>{project.name + \"-\" + box + \"-\" + poslabel}</strong>\n              </React.Fragment>\n            ),\n          });\n          setOpenSnackbar(true);\n        } else {\n          console.error(\"ERROR: Request succeeded, but status not 200\");\n          console.error(response);\n        }\n        setIsLoading(false);\n        return;\n      })\n      .catch((error) => {\n        if (error.response) {\n          console.error(\n            `ERROR fetchPosition(), status: ${error.response.status}, statusText: ${error.response.statusText}, message: '${error.response.data[\"message\"]}'`\n          );\n        } else {\n          console.error(error);\n        }\n        setIsLoading(false);\n        return;\n      });\n  };\n\n  // Next button is clicked\n  const handleNext = () => {\n    if (activeStep === 0 && selectedProject.value === 0) {\n      // If no project is selected, give error\n      setDataSnackbar({\n        type: \"error\",\n        title: \"Error\",\n        body: \"No project selected.\",\n      });\n      setOpenSnackbar(true);\n    } else if (activeStep === 1 && data.length === 0) {\n      // No data in input\n      setDataSnackbar({\n        type: \"error\",\n        title: \"Error\",\n        body: \"No items scanned.\",\n      });\n      setOpenSnackbar(true);\n    } else {\n      // Else continue\n      setActiveStep(activeStep + 1);\n    }\n  };\n\n  // Back button is clicked\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  // Function if snackbar should be opened/closed\n  const handleSnackbar = () => {\n    if (openSnackbar) {\n      setOpenSnackbar(false);\n    } else {\n      setOpenSnackbar(true);\n    }\n  };\n\n  // Function if dialog should be opened/closed\n  const handleDialog = () => {\n    if (openDialog) {\n      setOpenDialog(false);\n    } else {\n      setOpenDialog(true);\n    }\n  };\n\n  // If 'Yes' button in dialog at step 4 is clicked, so submit results\n  const handleYesDialog = async () => {\n    handleNext();\n    setOpenDialog(false);\n    setIsLoading(true);\n\n    fetchSendData(\"Check-in\", data)\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200 && response.statusText === \"OK\") {\n          console.log(response.data[\"message\"]);\n          if (response.data[\"output\"][\"success\"]) {\n            setAllItemsSubmitted(true);\n          } else {\n            setAllItemsSubmitted(false);\n            setFailedSubmittedItems(response.data[\"output\"][\"failedVials\"]);\n          }\n        } else {\n          console.error(\"ERROR: Request succeeded, but status not 200\");\n          console.error(response);\n        }\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        if (error.response) {\n          console.error(\n            `ERROR fetchSendData(), status: ${error.response.status}, statusText: ${error.response.statusText}, message: '${error.response.data[\"message\"]}'`\n          );\n        } else {\n          console.error(error);\n        }\n        setIsLoading(false);\n      });\n  };\n\n  // Labels of steps\n  const steps = [\"Select project\", \"Scan items\"];\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <SelectProject\n            selectedProject={selectedProject}\n            projects={projects}\n            onProjectChange={handleProjectChange}\n            isLoading={isLoading}\n          />\n        );\n      case 1:\n        return (\n          <ScanItems\n            data={data}\n            isLoading={isLoading}\n            selectedProject={selectedProject}\n            onDataChange={handleDataChanged}\n            onBarcodeSubmitted={handleBarcodeSubmitted}\n          />\n        );\n      case 2:\n        return (\n          <ItemsSubmitted\n            isLoading={isLoading}\n            allItemsSubmitted={allItemsSubmitted}\n            failedSubmittedItems={failedSubmittedItems}\n          />\n        );\n      default:\n        return <React.Fragment> Error: this step not found. </React.Fragment>;\n    }\n  }\n\n  function getButtonContent(step) {\n    let contents = [];\n\n    if (step !== 0 && step !== 2) {\n      contents.push(\n        <Button\n          key=\"button_back\"\n          name=\"button_back\"\n          onClick={handleBack}\n          // variant=\"contained\"\n          className={classes.button}\n        >\n          Back\n        </Button>\n      );\n    }\n    if (step === 1 && data.length > 0) {\n      contents.push(\n        <Button\n          variant=\"contained\"\n          name=\"button_submit\"\n          key=\"button_submit\"\n          color=\"primary\"\n          onClick={handleDialog}\n          className={classes.button}\n        >\n          Submit\n        </Button>\n      );\n    }\n    if (step === 0) {\n      contents.push(\n        <Button\n          variant=\"contained\"\n          name=\"button_next\"\n          key=\"button_next\"\n          color=\"primary\"\n          onClick={handleNext}\n          className={classes.button}\n        >\n          Next\n        </Button>\n      );\n    }\n    if (step === 2)\n      contents.push(\n        <Button\n          variant=\"contained\"\n          name=\"button_end\"\n          key=\"button_end\"\n          color=\"primary\"\n          onClick={() => {\n            handleChangePage(\"Home\");\n          }}\n          className={classes.button}\n        >\n          End\n        </Button>\n      );\n\n    return contents;\n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Check-in\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            <React.Fragment>\n              {getStepContent(activeStep)}\n              <div className={classes.buttons}>\n                {getButtonContent(activeStep)}\n              </div>\n              <MySnackbar\n                open={openSnackbar}\n                data={dataSnackbar}\n                handleSnackbar={handleSnackbar}\n              />\n              <MyDialog\n                open={openDialog}\n                data={{\n                  title:\n                    \"Are you sure you want to submit the scanned items to CDD?\",\n                }}\n                handleDialog={handleDialog}\n                handleYesDialog={handleYesDialog}\n              />\n            </React.Fragment>\n          </React.Fragment>\n        </Paper>\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default CheckIn;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Cookies from \"js-cookie\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport SelectProject from \"./Pages/SelectProject\";\nimport ScanItems from \"./Pages/ScanItems\";\nimport ItemsSubmitted from \"./Pages/ItemsSubmitted\";\nimport MySnackbar from \"./Components/MySnackbar\";\nimport MyDialog from \"./Components/MyDialog\";\n\nimport {\n  fetchSendData,\n  fetchProjects,\n  fetchPosition,\n} from \"../ApiFunctions\";\nimport {\n  isBarcodeUnique,\n  formatDate,\n  posIntegerToString,\n} from \"./Functions/ScanFunctions\";\n\n// Styles\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      maxWidth: 1200,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nfunction CheckOut({ handleChangePage }) {\n  // Styles\n  const classes = useStyles();\n\n  // Page states\n  const [activeStep, setActiveStep] = useState(0); // int, stepper: 1,2,3,4,5\n  const [isLoading, setIsLoading] = useState(false); // bool, is the page loading\n  const [openSnackbar, setOpenSnackbar] = useState(false); // bool, open the snackbar\n  const [dataSnackbar, setDataSnackbar] = useState({\n    type: \"error\",\n    title: null,\n    body: null,\n  });\n  const [openDialog, setOpenDialog] = useState(false); // bool, open the dialog window\n\n  // Data submition states\n  const [allItemsSubmitted, setAllItemsSubmitted] = useState(false); // bool, did the submission of all items succeed\n  const [failedSubmittedItems, setFailedSubmittedItems] = useState([]); // dic, data of failed submitted items\n\n  // Data states\n  const [data, setData] = useState([]); // dic, data of all scanned items\n  const [projects, setProjects] = useState([\n    {\n      value: 0,\n      id: 0,\n      name: \"\",\n    },\n  ]); // dic, data of projects, 0 is no project\n  const [selectedProject, setSelectecProject] = useState(projects[0]); // dic, data of selected project\n\n  // Load the projects from Database, only once\n  useEffect(() => {\n    setIsLoading(true);\n    fetchProjects()\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200 && response.statusText === \"OK\") {\n          console.log(response.data[\"message\"]);\n          const array = projects.concat(response.data[\"output\"][\"projects\"]);\n          array.forEach((item, index) => {\n            array[index].value = index;\n          });\n          setProjects(array);\n        } else {\n          console.error(\"ERROR: Request succeeded, but status not 200\");\n          console.error(response);\n        }\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        if (error.response) {\n          console.error(\n            `ERROR fetchProjects(), status: ${error.response.status}, statusText: ${error.response.statusText}, message: '${error.response.data[\"message\"]}'`\n          );\n        } else {\n          console.error(error);\n        }\n        setIsLoading(false);\n      });\n  }, []);\n\n  // When project changed, delete all data\n  const handleProjectChange = (event) => {\n    setSelectecProject(projects[event.target.value]);\n    setData([]);\n    setOpenSnackbar(false);\n  };\n\n  // Data is changed (delete button clicked)\n  const handleDataChanged = (newData) => {\n    // let box;\n    // let pos;\n    newData.forEach((item, index) => {\n      newData[index].id = index + 1; // Renumber indeces\n    });\n\n    setData(newData);\n  };\n\n  // Barcode is scanned and added to list, (green plus button is clicked)\n  const handleBarcodeSubmitted = (barcode) => {\n    setOpenSnackbar(false);\n\n    if (!isBarcodeUnique(data, barcode)) {\n      // Barcode not unique\n      setDataSnackbar({\n        type: \"error\",\n        title: \"Error\",\n        body: \"Barcode already scanned.\",\n      });\n      setOpenSnackbar(true);\n      return;\n    }\n\n    setIsLoading(true);\n    fetchPosition(\"Check-out\", barcode, selectedProject)\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200 && response.statusText === \"OK\") {\n          if (!response.data[\"output\"][\"isInCDD\"]) {\n            setDataSnackbar({\n              type: \"error\",\n              title: \"Error\",\n              body: (\n                <React.Fragment>\n                  <strong>{barcode}</strong>\n                  {\" not found in CDD Vault.\"}\n                </React.Fragment>\n              ),\n            });\n            setIsLoading(false);\n            setOpenSnackbar(true);\n            return;\n          }\n          if (!response.data[\"output\"][\"isInCorrectProject\"]) {\n            setDataSnackbar({\n              type: \"error\",\n              title: \"Error\",\n              body: (\n                <React.Fragment>\n                  <strong>{barcode}</strong>\n                  {\" found in different project: \"}\n                  <strong>\n                    {response.data[\"output\"][\"vialData\"][\"project\"][\"name\"]}\n                  </strong>\n                </React.Fragment>\n              ),\n            });\n            setIsLoading(false);\n            setOpenSnackbar(true);\n            return;\n          }\n          if (!response.data[\"output\"][\"isCorrectStatus\"]) {\n            setDataSnackbar({\n              type: \"error\",\n              title: \"Error\",\n              body: (\n                <React.Fragment>\n                  <strong>{barcode}</strong>\n                  {\" has incorrect status: \"}\n                  <strong>\n                    {response.data[\"output\"][\"vialData\"][\"Status\"]}\n                  </strong>\n                  {\".\"}\n                  <br />\n                  {\"Allowed statuses are 'Added' and 'Checked in'.\"}\n                </React.Fragment>\n              ),\n            });\n            setIsLoading(false);\n            setOpenSnackbar(true);\n            return;\n          }\n\n          const id = data.length + 1;\n          const [, box, pos] = response.data[\"output\"][\"locationArray\"];\n          const project = selectedProject;\n          const poslabel = posIntegerToString(pos);\n          const status = response.data[\"output\"][\"vialData\"][\"Status\"];\n          const timestamp = formatDate(new Date(Date.now()));\n          const username = Cookies.get(\"username\");\n          const fullname = Cookies.get(\"fullname\");\n          const newData = data;\n\n          newData.push({\n            id,\n            barcode,\n            project,\n            box,\n            poslabel,\n            status,\n            timestamp,\n            username,\n            fullname\n          });\n          setData(newData); // Update data\n\n          // Give success snackbar\n          setDataSnackbar({\n            type: \"success\",\n            title: \"Success\",\n            body: (\n              <React.Fragment>\n                <strong>{barcode}</strong>\n                {\" with status \"} <strong>{status}</strong>\n                {\" found at  \"}\n                <strong>{project.name + \"-\" + box + \"-\" + poslabel}</strong>\n              </React.Fragment>\n            ),\n          });\n          setOpenSnackbar(true);\n        } else {\n          console.error(\"ERROR: Request succeeded, but status not 200\");\n          console.error(response);\n        }\n        setIsLoading(false);\n        return;\n      })\n      .catch((error) => {\n        if (error.response) {\n          console.error(\n            `ERROR fetchPosition(), status: ${error.response.status}, statusText: ${error.response.statusText}, message: '${error.response.data[\"message\"]}'`\n          );\n        } else {\n          console.error(error);\n        }\n        setIsLoading(false);\n        return;\n      });\n  };\n\n  // Next button is clicked\n  const handleNext = () => {\n    if (activeStep === 0 && selectedProject.value === 0) {\n      // If no project is selected, give error\n      setDataSnackbar({\n        type: \"error\",\n        title: \"Error\",\n        body: \"No project selected.\",\n      });\n      setOpenSnackbar(true);\n    } else if (activeStep === 1 && data.length === 0) {\n      // No data in input\n      setDataSnackbar({\n        type: \"error\",\n        title: \"Error\",\n        body: \"No items scanned.\",\n      });\n      setOpenSnackbar(true);\n    } else {\n      // Else continue\n      setActiveStep(activeStep + 1);\n    }\n  };\n\n  // Back button is clicked\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  // Function if snackbar should be opened/closed\n  const handleSnackbar = () => {\n    if (openSnackbar) {\n      setOpenSnackbar(false);\n    } else {\n      setOpenSnackbar(true);\n    }\n  };\n\n  // Function if dialog should be opened/closed\n  const handleDialog = () => {\n    if (openDialog) {\n      setOpenDialog(false);\n    } else {\n      setOpenDialog(true);\n    }\n  };\n\n  // If 'Yes' button in dialog at step 4 is clicked, so submit results\n  const handleYesDialog = async () => {\n    handleNext();\n    setOpenDialog(false);\n    setIsLoading(true);\n\n    fetchSendData(\"Check-out\", data)\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200 && response.statusText === \"OK\") {\n          console.log(response.data[\"message\"]);\n          if (response.data[\"output\"][\"success\"]) {\n            setAllItemsSubmitted(true);\n          } else {\n            setAllItemsSubmitted(false);\n            setFailedSubmittedItems(response.data[\"output\"][\"failedVials\"]);\n          }\n        } else {\n          console.error(\"ERROR: Request succeeded, but status not 200\");\n          console.error(response);\n        }\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        if (error.response) {\n          console.error(\n            `ERROR fetchSendData(), status: ${error.response.status}, statusText: ${error.response.statusText}, message: '${error.response.data[\"message\"]}'`\n          );\n        } else {\n          console.error(error);\n        }\n        setIsLoading(false);\n      });\n  };\n\n  // Labels of steps\n  const steps = [\"Select project\", \"Scan items\"];\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <SelectProject\n            selectedProject={selectedProject}\n            projects={projects}\n            onProjectChange={handleProjectChange}\n            isLoading={isLoading}\n          />\n        );\n      case 1:\n        return (\n          <ScanItems\n            data={data}\n            isLoading={isLoading}\n            selectedProject={selectedProject}\n            onDataChange={handleDataChanged}\n            onBarcodeSubmitted={handleBarcodeSubmitted}\n          />\n        );\n      case 2:\n        return (\n          <ItemsSubmitted\n            isLoading={isLoading}\n            allItemsSubmitted={allItemsSubmitted}\n            failedSubmittedItems={failedSubmittedItems}\n          />\n        );\n      default:\n        return <React.Fragment> Error: this step not found. </React.Fragment>;\n    }\n  }\n\n  function getButtonContent(step) {\n    let contents = [];\n\n    if (step !== 0 && step !== 2) {\n      contents.push(\n        <Button\n          key=\"button_back\"\n          name=\"button_back\"\n          onClick={handleBack}\n          // variant=\"contained\"\n          className={classes.button}\n        >\n          Back\n        </Button>\n      );\n    }\n    if (step === 1 && data.length > 0) {\n      contents.push(\n        <Button\n          variant=\"contained\"\n          name=\"button_submit\"\n          key=\"button_submit\"\n          color=\"primary\"\n          onClick={handleDialog}\n          className={classes.button}\n        >\n          Submit\n        </Button>\n      );\n    }\n    if (step === 0) {\n      contents.push(\n        <Button\n          variant=\"contained\"\n          name=\"button_next\"\n          key=\"button_next\"\n          color=\"primary\"\n          onClick={handleNext}\n          className={classes.button}\n        >\n          Next\n        </Button>\n      );\n    }\n    if (step === 2)\n      contents.push(\n        <Button\n          variant=\"contained\"\n          name=\"button_end\"\n          key=\"button_end\"\n          color=\"primary\"\n          onClick={() => {\n            handleChangePage(\"Home\");\n          }}\n          className={classes.button}\n        >\n          End\n        </Button>\n      );\n\n    return contents;\n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Check-out\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            <React.Fragment>\n              {getStepContent(activeStep)}\n              <div className={classes.buttons}>\n                {getButtonContent(activeStep)}\n              </div>\n              <MySnackbar\n                open={openSnackbar}\n                data={dataSnackbar}\n                handleSnackbar={handleSnackbar}\n              />\n              <MyDialog\n                open={openDialog}\n                data={{\n                  title:\n                    \"Are you sure you want to submit the scanned items to CDD?\",\n                }}\n                handleDialog={handleDialog}\n                handleYesDialog={handleYesDialog}\n              />\n            </React.Fragment>\n          </React.Fragment>\n        </Paper>\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default CheckOut;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport clsx from \"clsx\";\nimport Cookies from \"js-cookie\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\n\nimport RightDrawer from \"./RightDrawer\";\nimport HomeScreen from \"./Home/HomeScreen\";\nimport Add from \"./Scan/Add\";\nimport Delete from \"./Scan/Delete\";\nimport CheckIn from \"./Scan/CheckIn\";\nimport CheckOut from \"./Scan/CheckOut\";\nimport ZobioLogoFlat from \"./img/ZobioLogo_Flat.svg\";\n\nconst drawerWidth = 240;\n\n// Styles\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: drawerWidth,\n  },\n  backButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-start\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: 0,\n  },\n}));\n\nexport default function Dashboard(props) {\n  // Styles\n  const classes = useStyles();\n\n  // Page states\n  const [openDrawer, setOpenDrawer] = useState(false); // bool, is the drawer open\n  const [openDialog, setOpenDialog] = useState(false); // bool, is the dialog open\n  const [openPopup, setOpenPopup] = useState(false); // bool, if this is true, and back is cliked the Dialog is open\n  const [lastPage, setLastPage] = useState(\"\"); // string, title of last page\n  const [activePage, setActivePage] = useState(\"Home\"); // string, active page\n\n  // Delete Cookies before unloading page\n  useEffect(() => {\n    window.addEventListener(\"beforeunload\", (event) => {\n      const remember = Cookies.get(\"remember\") === \"true\";\n\n      event.preventDefault();\n      if (!remember) {\n        // Only delete cookies, when remember was false\n        console.log(\"Remember was false, remove all cookies\");\n        Cookies.remove(\"username\");\n        Cookies.remove(\"token\");\n        Cookies.remove(\"authentication\");\n        Cookies.remove(\"remember\");\n      }\n    });\n  });\n\n  // Handle function when 'drawer' button is clicked\n  const handleDrawerOpen = () => {\n    if (openDrawer) {\n      setOpenDrawer(false);\n    } else {\n      setOpenDrawer(true);\n    }\n  };\n\n  // Handle function when 'back (<)' button in the Drawer is clicked\n  const handleDrawerBack = () => {\n    if (openPopup) {\n      setOpenDialog(true);\n    } else {\n      handleBack();\n    }\n  };\n\n  // Function to open and close the dialog window\n  const handleDialog = () => {\n    if (openDialog) {\n      setOpenDialog(false);\n    } else {\n      setOpenDialog(true);\n    }\n  };\n\n  // Function to handle the 'back (<)' button\n  const handleBack = () => {\n    setOpenDialog(false);\n\n    if ([\"Add\", \"Delete\", \"Check-in\", \"Check-out\"].includes(lastPage)) {\n      setOpenPopup(true);\n    } else {\n      setOpenPopup(false);\n    }\n\n    setLastPage(activePage);\n    setActivePage(lastPage);\n  };\n\n  // Function to open and close the dialog window\n  const handleChangePage = (page) => {\n    if ([\"Add\", \"Delete\", \"Check-in\", \"Check-out\"].includes(page)) {\n      setOpenPopup(true);\n    } else {\n      setOpenPopup(false);\n    }\n    setLastPage(activePage);\n    setActivePage(page);\n  };\n\n  const getPageContent = (page) => {\n    switch (page) {\n      case \"Add\":\n        return <Add handleChangePage={handleChangePage} />;\n      case \"Delete\":\n        return <Delete handleChangePage={handleChangePage} />;\n      case \"Check-in\":\n        return <CheckIn handleChangePage={handleChangePage} />;\n      case \"Check-out\":\n        return <CheckOut handleChangePage={handleChangePage} />;\n      default:\n        return <HomeScreen handleChangePage={handleChangePage} />;\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: openDrawer,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.backButton}\n            color=\"inherit\"\n            aria-label=\"back drawer\"\n            onClick={handleDrawerBack}\n          >\n            <ChevronLeftIcon />\n          </IconButton>\n          <img src={ZobioLogoFlat} width={150} />\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n            {\" \"}\n          </Typography>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"end\"\n            onClick={handleDrawerOpen}\n            disableRipple={false}\n          >\n            {!openDrawer ? <MenuIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: openDrawer,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {getPageContent(activePage)}\n      </main>\n      <RightDrawer open={openDrawer} />\n      <Dialog\n        open={openDialog}\n        onClose={handleDialog}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Are you sure you want to go back?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            All scanned data will be deleted.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleBack} color=\"primary\">\n            Yes\n          </Button>\n          <Button onClick={handleDialog} color=\"primary\" autoFocus>\n            No\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport useCookie from \"@devhammed/use-cookie\";\n\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nimport AuthApi from \"./AuthApi\";\nimport Login from \"./Login\";\nimport Dashboard from \"./Dashboard\";\n\n// Or Create your Own theme:\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#173D5C\", // Zobio main color, dark green blueish\n      light: \"#476789\",\n      dark: \"#001732\",\n    },\n    secondary: {\n      main: \"#b71c1c\",\n      light: \"#f05545\",\n      dark: \"#7f0000\",\n    },\n    error: {\n      main: \"#d32f2f\",\n      light: \"#ff6659\",\n      dark: \"#9a0007\",\n    },\n    warning: {\n      main: \"#ffab00\",\n      light: \"#ffdd4b\",\n      dark: \"#c67c00\",\n    },\n    success: {\n      main: \"#388e3c\",\n      light: \"#6abf69\",\n      dark: \"#00600f\",\n    },\n  },\n});\n\nfunction App() {\n  const [auth, setAuth, deleteAuth] = useCookie(\"authentication\", false);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <AuthApi.Provider value={{ auth, setAuth }}>\n        <Router>\n          <Routes />\n        </Router>\n      </AuthApi.Provider>\n    </MuiThemeProvider>\n  );\n}\n\nfunction ProtectedRoute({ auth, component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        auth ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: \"/login\" }} />\n        )\n      }\n    />\n  );\n}\n\nfunction ProtectedLogin({ auth, component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !auth ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: \"/dashboard\" }} />\n        )\n      }\n    />\n  );\n}\n\nconst Routes = () => {\n  const Auth = React.useContext(AuthApi);\n  return (\n    <Switch>\n      <ProtectedRoute\n        path=\"/dashboard\"\n        exact\n        auth={Auth.auth}\n        component={Dashboard}\n      />\n      <ProtectedLogin path=\"/login\" exact auth={Auth.auth} component={Login} />\n      <ProtectedLogin path=\"/\" auth={Auth.auth} component={Login} />\n    </Switch>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n// serviceWorker.unregister();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}